name: Build packages

on:
  push:
    branches:
      - enable-snapcraft-publishing

jobs:
  build:
    strategy:
      matrix:
        # os: [windows-latest, ubuntu-latest, macos-latest]
        os: [ubuntu-latest]
        include:
          # - os: windows-latest
          #   electron_cmd: win
          #   package_glob: dist/*.exe
          - os: ubuntu-latest
            electron_cmd: linux
            # TODO: define all packages
            package_glob: |
              dist/*.deb
              dist/*.snap
              dist/*.rpm
          # - os: macos-latest
          #   electron_cmd: mac
          #   package_glob: dist/*.dmg
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: "--max_old_space_size=4096"
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: glibc experiments
        run: |
          ldd --version
          sudo apt-get update
          sudo apt-get upgrade -y libc6 glibc-source
          ldd --version

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"

      - name: Register yarn 1.x cache folder
        id: yarn-cache-folder
        shell: bash
        run: |
          echo "path=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Setup yarn 3.x
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          yarn --version

      - name: Install packages
        env:
          YARN_CACHE_FOLDER: ${{ steps.yarn-cache-folder.outputs.path }}
        run: yarn install --immutable

      - name: Build
        run: yarn build

      # TODO: uncomment
      # - name: Deploy Github Pages
      #   if: matrix.os == 'ubuntu-latest'
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./build

      - name: Package the electron app MacOS
        if: matrix.os == 'macos-latest'
        env:
          CSC_KEY_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          CSC_LINK: certificate.p12
          APPLEID: ${{ secrets.APPLE_NOTARIZE_APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLE_NOTARIZE_PASSWORD }}
        run: |
          echo "${{ secrets.APPLE_CERTIFICATE_P12 }}" | base64 -d -o certificate.p12
          yarn electron:package:mac

      - name: Package the electron app Linux
        if: matrix.os == 'ubuntu-latest'
        env:
          SNAPCRAFT_BUILD_ENVIRONMENT: host
        run: |
          sudo snap install snapcraft --classic
          yarn electron:package:linux

      - name: Package the electron app Windows
        if: matrix.os == 'windows-latest'
        run: yarn electron:package:win

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: app_dist_${{ matrix.electron_cmd }}
          path: ${{ matrix.package_glob }}
          if-no-files-found: error

      # this is needed to ensure that actions/setup-node will pick up yarn cache
      - name: Remove yarn 3.5
        run: corepack disable
